{"version":3,"sources":["components/Stick.js","components/Header.js","components/StatusBar.js","components/Controls.js","components/Winner.js","components/Modal.js","components/HowToPlay.js","components/Settings.js","App.js","index.js"],"names":["Stick","top","left","rotation","selected","currentPlayer","stickStyle","width","height","transform","bgClass","className","style","Header","dispatch","onHowToPlay","onSettings","onClick","type","href","StatusBar","total","Controls","inputNumber","selectedNumber","min","max","onSubmit","e","preventDefault","disabled","onChange","payload","value","target","step","String","Winner","winner","Modal","open","title","onClose","children","ReactDOM","createPortal","document","getElementById","HowToPlay","validateRange","input","range","error","isNaN","Settings","onSave","useState","setTotal","setMin","setMax","validRanges","useMemo","validTotal","parseInt","validMin","topMin","Math","calculateValidRanges","errors","setErrors","errorTotal","errorMin","errorMax","SETTINGS","MIN","MAX","TOTAL","initState","numberOfSticks","sticks","i","push","id","isSelected","floor","random","reducer","state","action","length","fromId","map","stick","filter","App","useReducer","howToPlayIsOpen","setHowToPlayIsOpen","settingsIsOpen","setSettingsIsOpen","render","StrictMode"],"mappings":"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","file":"static/js/main.0d9a4036.chunk.js","sourcesContent":["function Stick({top, left, rotation, selected, currentPlayer}) {\r\n\r\n  const stickStyle = {\r\n    width: \"6px\",\r\n    height: \"162px\",\r\n    top: `${top}px`,\r\n    left: `${left}px`,\r\n    transform: `rotate(${rotation}deg)`\r\n  }\r\n\r\n  let bgClass = \"bg-yellow-400 border-white\";\r\n  if (selected) {\r\n    bgClass = (currentPlayer === 1) ? \"bg-green-400 border-green-600\" : \"bg-red-400 border-red-600\";\r\n  }\r\n\r\n  return (\r\n    <div className={`absolute z-10 border ${bgClass}`} style={stickStyle}></div>\r\n  );\r\n}\r\n\r\nexport default Stick;","function Header({dispatch, onHowToPlay, onSettings}) {\r\n\r\n  return (\r\n    <header className=\"bg-gray-100 border-b border-gray-200 fixed inset-x-0 top-0 z-20 py-3\">\r\n      <nav className=\"flex justify-between items-center max-w-2xl mx-auto text-gray-700\">\r\n        <span className=\"text-lg\">Sticks</span>\r\n        <ul className=\"text-sm\">\r\n          <li className=\"inline-block px-2 border-r border-gray-400\">\r\n            <button onClick={() => dispatch({type: \"restart\"})}>New Game</button>\r\n          </li>\r\n          <li className=\"inline-block px-2 border-r border-gray-400\">\r\n            <button onClick={onSettings}>Settings</button>\r\n          </li>\r\n          <li className=\"inline-block px-2 border-r border-gray-400\">\r\n            <button onClick={onHowToPlay}>How to play</button>\r\n          </li>\r\n          <li className=\"inline-block pl-2\">\r\n            <a href=\"https://github.com/N0rbee/sticks\">GitHub</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","function StatusBar({total, currentPlayer}) {\r\n\r\n    return (\r\n        <div className=\"flex justify-between\">\r\n          <div className={currentPlayer === 1 ? \"\" : \"invisible\"}>\r\n            <span className=\"font-bold text-3xl text-green-500\">Player 1</span>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <span className=\"block text-lg\">Remaining</span>\r\n            <span className=\"text-3xl font-light\">{total}</span>\r\n          </div>\r\n          <div className={currentPlayer === 0 ? \"\" : \"invisible\"}>\r\n            <span className=\"font-bold text-3xl text-red-500\">Player 2</span>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatusBar;","function Controls({dispatch, inputNumber, selectedNumber, min, max, currentPlayer}) {\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    dispatch({type: \"removeSticks\"})\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"text-center my-4\">\r\n        <button \r\n          className={`text-sm tracking-wider uppercase shadow text-white py-2 px-4 rounded ${currentPlayer === 1 ? \"bg-green-400\" : \"bg-red-400\"}`}\r\n          type=\"submit\"\r\n          disabled={selectedNumber < min}>\r\n          Take {selectedNumber} sticks\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <input\r\n          className=\"w-full\"\r\n          type=\"range\"\r\n          onChange={(e) => dispatch({type: \"selectSticks\", payload: {value: e.target.value}})}\r\n          value={inputNumber}\r\n          min={min}\r\n          max={max}\r\n          step={1}\r\n        />\r\n        <div className=\"flex justify-between text-sm\">\r\n          <span>Min.: {min}</span>\r\n          {String(inputNumber) !== String(selectedNumber) && <span className=\"text-red-500\">{inputNumber} forced to {selectedNumber}</span>}\r\n          <span>Max.: {max}</span>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Controls;","function Winner({winner}) {\r\n  if (winner === \"\") return null;\r\n\r\n  return (\r\n    <div className={`fixed inset-x-0 top-1/3 text-white shadow z-20 text-center p-8 ${winner === 'Player 1' ? \"bg-green-400\" : \"bg-red-400\"}`}>\r\n      <h2 className=\"text-6xl\">Winner</h2>\r\n      <p className=\"text-4xl bold mt-4\">{winner}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Winner;","import ReactDOM from 'react-dom';\r\n\r\nfunction Modal({open, title, onClose, children}) {\r\n  if (!open) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className=\"fixed inset-0 bg-black z-20 opacity-20\" onClick={onClose}></div>\r\n      <div className=\"fixed left-1/2 top-1/4 bg-white border border-gray-300 w-80 z-20 transform -translate-x-1/2\">\r\n        <header className=\"border-b border-gray-300 bg-gray-100 flex justify-between items-center pl-2 text-gray-600\">\r\n          <h1 className=\"font-bold\">{title}</h1>\r\n          <button className=\"text-4xl px-2\" onClick={onClose}>&times;</button>\r\n        </header>\r\n        <div className=\"px-6 py-4\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n}\r\n\r\nexport default Modal;","import Modal from \"./Modal\";\r\n\r\nfunction HowToPlay({open, onClose}) {\r\n\r\n  return (\r\n    <Modal open={open} title=\"How to play\" onClose={onClose}>\r\n      <p>\r\n        There are \"N\" sticks on the table.\r\n        A player in his or her turn can pick min. \"a\" or max. \"b\" sticks.\r\n        The player who can't pick or can only pick min. \"a\" sticks loses the game.\r\n      </p>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default HowToPlay;","import Modal from \"./Modal\";\r\nimport { useState, useMemo } from \"react\";\r\n\r\nfunction calculateValidRanges(total, min) {\r\n  let validTotal = parseInt(total);\r\n  if (isNaN(validTotal)) {\r\n    validTotal = 100;\r\n  } else {\r\n    if (validTotal < 10) {\r\n      validTotal = 10;\r\n    } else if (validTotal > 1000) {\r\n      validTotal = 1000;\r\n    }\r\n  }\r\n  let validMin = parseInt(min);\r\n  if (isNaN(validMin)) {\r\n    validMin = 1;\r\n  }\r\n  let topMin = validTotal - 2;\r\n  return {\r\n    total: [10, 1000],\r\n    min: [1, topMin],\r\n    max: [(Math.min(validMin, topMin) + 1), validTotal - 1]\r\n  }\r\n}\r\n\r\nfunction validateRange(input, range) {\r\n  let error = '';\r\n  if (isNaN(input)) {\r\n    error = 'No an Integer';\r\n  } else if (input < range[0] || input > range[1]) {\r\n    error = 'Out of range';\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction Settings({open, onClose, onSave}) {\r\n  const [total, setTotal] = useState(100);\r\n  const [min, setMin] = useState(1);\r\n  const [max, setMax] = useState(10);\r\n  const validRanges = useMemo(() => calculateValidRanges(total, min), [total, min]);\r\n  const [errors, setErrors] = useState({total: '', min: '', max: ''});\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const errorTotal = validateRange(total, validRanges.total);\r\n    const errorMin = validateRange(min, validRanges.min);\r\n    const errorMax = validateRange(max, validRanges.max);\r\n    setErrors({\r\n      total: errorTotal,\r\n      min: errorMin,\r\n      max: errorMax\r\n    });\r\n    if (errorTotal === '' && errorMin === '' && errorMax === '') {\r\n      onSave(total, min, max);\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n      <Modal open={open} title=\"Settings\" onClose={onClose}>\r\n        <form className=\"flex flex-col items-center\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <div className=\"mb-2\">\r\n              <label className=\"inline-block w-32\">\r\n                Starting <small>[{validRanges.total[0]}, {validRanges.total[1]}]</small>\r\n              </label>\r\n              <input className=\"border border-gray-400 w-16 px-0.5\" type=\"text\" onChange={(e) => setTotal(e.target.value)} value={total} />\r\n              {errors.total && <small className=\"text-red-500 ml-1\">{errors.total}</small>}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n              <label className=\"inline-block w-32\">\r\n                Min. <small>[{validRanges.min[0]}, {validRanges.min[1]}]</small>\r\n              </label>\r\n              <input className=\"border border-gray-400 w-16 px-0.5\" type=\"text\" onChange={(e) => setMin(e.target.value)} value={min} />\r\n              {errors.min && <small className=\"text-red-500 ml-1\">{errors.min}</small>}\r\n            </div>\r\n            <div>\r\n              <label className=\"inline-block w-32\">\r\n                Max. <small>[{validRanges.max[0]}, {validRanges.max[1]}]</small>\r\n              </label>\r\n              <input className=\"border border-gray-400 w-16 px-0.5\" type=\"text\" onChange={(e) => setMax(e.target.value)} value={max} />\r\n              {errors.max && <small className=\"text-red-500 ml-1\">{errors.max}</small>}\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-4\">\r\n            <button className=\"text-sm tracking-wider uppercase bg-blue-400 shadow text-white py-2 px-4 rounded\" type=\"submit\">\r\n              Save &amp; New Game\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default Settings;","import Stick from './components/Stick';\nimport Header from './components/Header';\nimport StatusBar from './components/StatusBar';\nimport Controls from './components/Controls';\nimport Winner from './components/Winner';\nimport HowToPlay from './components/HowToPlay';\nimport Settings from './components/Settings';\nimport { useReducer, useState } from 'react';\n\nconst SETTINGS = {\n  MIN: 1,\n  MAX: 10,\n  TOTAL: 100\n}\n\nfunction initState(numberOfSticks) {\n  let sticks = [];\n  for (let i = 0; i < numberOfSticks; i++) {\n    sticks.push({\n      id: i,\n      isSelected: false,\n      top: Math.floor(Math.random() * 338),\n      left: Math.floor(Math.random() * 338) + 78,\n      rotation: Math.floor(Math.random() * 180)\n    });\n  }\n  return {\n    sticks: sticks,\n    inputNumber: 0,\n    selectedNumber: 0,\n    currentPlayer: 1\n  }\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"selectSticks\":\n      let selectedNumber = parseInt(action.payload.value);\n      if (isNaN(selectedNumber) || (state.sticks.length <= SETTINGS.MIN)) {\n        selectedNumber = 0;\n      } else if (selectedNumber < SETTINGS.MIN) {\n        selectedNumber = 0;\n      } else  {\n        selectedNumber = Math.min(selectedNumber, SETTINGS.MAX, (state.sticks.length - 1));\n      }\n      let fromId = state.sticks.length - selectedNumber;\n      return {\n        ...state,\n        sticks: state.sticks.map(stick => {\n          if (stick.id < fromId) return {...stick, selected: false};\n          return {...stick, selected: true}\n        }),\n        inputNumber: action.payload.value,\n        selectedNumber: selectedNumber\n      };\n    case \"removeSticks\":\n      const sticks = state.sticks.filter(stick => !stick.selected);\n      return {\n        ...state,\n        sticks: sticks,\n        inputNumber: 0,\n        selectedNumber: 0,\n        currentPlayer: (state.currentPlayer + 1) % 2\n      };\n    case \"restart\":\n      return initState(SETTINGS.TOTAL);\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, SETTINGS.TOTAL, initState);\n  const [howToPlayIsOpen, setHowToPlayIsOpen] = useState(false);\n  const [settingsIsOpen, setSettingsIsOpen] = useState(false);\n\n  function saveSettings(total, min ,max) {\n    SETTINGS.TOTAL = total;\n    SETTINGS.MIN = min;\n    SETTINGS.MAX = max;\n    dispatch({type: 'restart'});\n  }\n\n  return (\n    <main>\n      <Header\n        dispatch={dispatch}\n        onHowToPlay={() => setHowToPlayIsOpen(true)}\n        onSettings={() => setSettingsIsOpen(true)}\n      />\n      <section className=\"max-w-2xl mx-auto mt-16\">\n        <StatusBar total={state.sticks.length} currentPlayer={state.currentPlayer} />\n        <div className=\"relative mx-auto my-2\" style={{width: \"500px\", height: \"500px\"}}>\n          {state.sticks.map(stick => <Stick\n            key={stick.id}\n            selected={stick.selected}\n            top={stick.top}\n            left={stick.left}\n            rotation={stick.rotation}\n            currentPlayer={state.currentPlayer}\n          />)}\n        </div>\n        <Controls\n          dispatch={dispatch}\n          inputNumber={state.inputNumber}\n          selectedNumber={state.selectedNumber}\n          min={SETTINGS.MIN}\n          max={SETTINGS.MAX}\n          currentPlayer={state.currentPlayer}\n        />\n      </section>\n      <Winner winner={(state.sticks.length <= SETTINGS.MIN) ? ((state.currentPlayer === 1) ? \"Player 2\" : \"Player 1\") : \"\"} />\n      <HowToPlay open={howToPlayIsOpen} onClose={() => setHowToPlayIsOpen(false)} />\n      <Settings open={settingsIsOpen} onClose={() => setSettingsIsOpen(false)} onSave={saveSettings} />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}